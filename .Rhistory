## shapfile prep code, view R script for details
source("./code/shapfile_prep.R", echo = F)
## high resolution map of alaska and canada (plots very slow when layer in turned on)
## raster library required, but if library is loaded dplyr::select is masked
canam <- raster::getData("GADM", country = c("USA", "Canada"), level = 1, path = "./data/raster")
## low resolution map of russia, alaska, canada (quick!)
ak <- maps::map("world", region=c('russia', 'usa:alaska', 'canada'), fill=T, plot=F) %>%
broom::tidy()
# data ----
# scallop survey haul data for example
survey_data <- read_csv("./data/survey/HaulTableData_Cruise1901.csv")
## load shapefile of interest
grid <- f_shp_prep("./data/shapefiles/statewide_scallop_survey_grid_2019",
"scalGrid2019_all_albers")
## check polygon data frame 'long' and 'lat' to examine projection
as_tibble(grid)
## if necessary re-project shapfile to a different coordinate system
## example: scallop survey grid was projected in albers, but base map was projected in NAD 1983
grid <- f_albers_to_nad83(grid)
survey_data %>%
### manipulate scallop survey station name to align with convention of shapfile data
mutate(station_number = gsub("[[:alpha:]]", "", STATION_ID),
station_letter = substring(gsub("\\d", "", STATION_ID), 2, 3),
station = paste(station_letter, station_number, sep = " ")) %>%
### select data of interest
select(station, avg_depth) %>%
### use a right join to the grid (there are multiple rows per cell that need 'fill' data)
right_join(grid, by = "station") %>%
## need to sort by order so polygon is drawn correctly
arrange(order) -> fillable_grid
## if there is biological data by station (for surveys), join with grid
survey_data %>%
### manipulate scallop survey station name to align with convention of shapfile data
mutate(station_number = gsub("[[:alpha:]]", "", station),
station_letter = substring(gsub("\\d", "", station), 2, 3),
station = paste(station_letter, station_number, sep = " ")) %>%
### select data of interest
select(station, avg_depth) %>%
### use a right join to the grid (there are multiple rows per cell that need 'fill' data)
right_join(grid, by = "station") %>%
## need to sort by order so polygon is drawn correctly
arrange(order) -> fillable_grid
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-154.5, -153), ylim = c(58, 59))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-145, -140), ylim = c(58, 60))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-142, -143), ylim = c(59.5, 60.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-144, -142), ylim = c(59.5, 60.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-145, -142), ylim = c(59.5, 60.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-145, -144.5), ylim = c(59.5, 60.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-145, -144.5), ylim = c(59.5, 60))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-145, -144), ylim = c(59.5, 60))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-145, -143), ylim = c(59.5, 60))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-143, -142), ylim = c(59.5, 60))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-143, -142), ylim = c(59.7, 60.5))+
theme_bw()
fillable_grid
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
#coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-143, -142), ylim = c(59.7, 60.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62)+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.5, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
#scale_fill_gradient(low = "yellow", high = "blue", trans = "log10")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_brewer(pallete = "Spectral")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_brewer(palette = "Spectral")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_brewer(palette = "Spectral")+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_gradientn(colours = terrain.colors(10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_gradientn(colours = terrain.colors(5))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
filter(bed_code == "YAK5") %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139, -138.3), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
fillable_grid %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = avg_depth), color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
theme_bw()
ak
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
ggplot()+
geom_polygon(data = canam, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62, xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
theme_bw()
## map plot
ggplot()+
geom_polygon(data = canam, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw() -> map
## save figure
ggsave("./figures/example_map.png", plot = map, width = 5, height = 3, units = "in")
install.packages("ggsn")
# load ----
library(ggsn)
ggplot()+
geom_polygon(data = canam, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north()
ggplot()+
geom_polygon(data = canam, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(data = canam)
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north()
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(x.min = 59)
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(x.min = -139, x.max = -139.4)
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(x.min = -139, x.max = -139.4, y.min = 58.8, y.min = 59)
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(x.min = -139, x.max = -139.4, y.min = 58.8, y.max = 59)
scalebar(domestic_violence, dist = 4, dist_unit = "nm",
transform = TRUE, model = "albers")
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
#coord_map(projection = "albers", lat0 = 55, lat = 62,
#xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(x.min = -139, x.max = -139.4, y.min = 58.8, y.max = 59)
north(x.min = -139, x.max = -139.4, y.min = 58.8, y.max = 59)
## map plot
ggplot()+
geom_polygon(data = ak, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black", fill = "grey40")+
geom_polygon(data = fillable_grid, aes(x = long, y = lat, group = group, fill = avg_depth),
color = "black")+
scale_fill_gradientn(colours = terrain.colors(n = 10))+
coord_map(projection = "albers", lat0 = 55, lat = 62,
xlim = c(-139.5, -138.3), ylim = c(58.75, 59.5))+
labs(x = "Longitude", y = "Latitude", fill = "Depth (fa)")+
theme_bw()+
north(x.min = -139, x.max = -139.4, y.min = 58.8, y.max = 59)
library(TMB)
Version = "linear_mixed_model"
# Download CPP file
setwd( tempdir() )
download.file( url="https://raw.githubusercontent.com/James-Thorson/mixed-effects/master/linear_mixed_model/linear_mixed_model.cpp", destfile="linear_mixed_model.cpp", method="auto")
compile( paste0(Version,".cpp") )
# Download CPP file
setwd( tempdir() )
download.file( url="https://raw.githubusercontent.com/James-Thorson/mixed-effects/master/linear_mixed_model/linear_mixed_model.cpp", destfile="linear_mixed_model.cpp", method="auto")
compile( paste0(Version,".cpp") )
# Generate inputs for TMB
Data = list( "n_data"=length(Y), "n_factors"=length(unique(Factor)), "Factor"=Factor-1, "Y"=Y)
Parameters = list( "X0"=-10, "log_SD0"=2, "log_SDZ"=2, "Z"=rep(0,Data$n_factor) )
Random = c("Z")
# Build TMB object
dyn.load( dynlib(Version) )
Obj = MakeADFun(data=Data, parameters=Parameters, random=Random)  #
install.Rtools(TRUE)
library(TMB)
Version = "linear_mixed_model"
# Download CPP file
setwd( tempdir() )
download.file( url="https://raw.githubusercontent.com/James-Thorson/mixed-effects/master/linear_mixed_model/linear_mixed_model.cpp", destfile="linear_mixed_model.cpp", method="auto")
compile( paste0(Version,".cpp") )
find_rtools()
library(devtools)
find_rtools()
compile( paste0(Version,".cpp") )
library(devtools)
Sys.setenv(PATH = paste("C:/Rtools/bin", Sys.getenv("PATH"), sep=";"))
Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")
compile( paste0(Version,".cpp") )
# Generate inputs for TMB
Data = list( "n_data"=length(Y), "n_factors"=length(unique(Factor)), "Factor"=Factor-1, "Y"=Y)
Parameters = list( "X0"=-10, "log_SD0"=2, "log_SDZ"=2, "Z"=rep(0,Data$n_factor) )
Random = c("Z")
# Build TMB object
dyn.load( dynlib(Version) )
Obj = MakeADFun(data=Data, parameters=Parameters, random=Random)  #
# Check that TMB is working
Obj$fn( Obj$par )
# Generate inputs for TMB
Data = list( "n_data"=length(Y), "n_factors"=length(unique(Factor)), "Factor"=Factor-1, "Y"=Y)
set.seed(1)
Factor = rep( 1:10, each=10)
Z = rnorm( length(unique(Factor)), mean=0, sd=1)
X0 = 0
Y = Z[Factor] + X0 + rnorm( length(Factor), mean=0, sd=1)
######################
# Run in TMB
######################
library(TMB)
Version = "linear_mixed_model"
# Download CPP file
setwd( tempdir() )
download.file( url="https://raw.githubusercontent.com/James-Thorson/mixed-effects/master/linear_mixed_model/linear_mixed_model.cpp", destfile="linear_mixed_model.cpp", method="auto")
compile( paste0(Version,".cpp") )
# Generate inputs for TMB
Data = list( "n_data"=length(Y), "n_factors"=length(unique(Factor)), "Factor"=Factor-1, "Y"=Y)
Parameters = list( "X0"=-10, "log_SD0"=2, "log_SDZ"=2, "Z"=rep(0,Data$n_factor) )
Random = c("Z")
# Build TMB object
dyn.load( dynlib(Version) )
Obj = MakeADFun(data=Data, parameters=Parameters, random=Random)  #
# Check that TMB is working
Obj$fn( Obj$par )
devtools::install_github(“james-thorson/FishStatsUtils”)
devtools::install_github("james-thorson/FishStatsUtils”)
devtools::install_github("james-thorson/FishStatsUtils")
devtools::install_github("james-thorson/FishStatsUtils")
devtools::install_github("james-thorson/FishStatsUtils")
install.packages("devtools")
## high resolution map of alaska and canada (plots very slow when layer in turned on)
## raster library required, but if library is loaded dplyr::select is masked
canam <- raster::getData("GADM", country = c("USA", "Canada"), level = 1, path = "./data/raster")
shapefile(canam, filename = "./CANAM_high_res.shp")
raster::shapefile(canam, filename = "./CANAM_high_res.shp")
f_shp_prep(".",
"CANAM_high_res")
## shapfile prep code, view R script for details
source("./code/shapfile_prep.R", echo = F)
f_shp_prep(".",
"CANAM_high_res")
f_shp_prep(".",
"CANAM_high_res") -> data
data
ggplot()+
geom_polygon(data = data, aes(x = long, y = lat, grourp = group))
ggplot()+
geom_polygon(data = data, aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-130, -125), ylim = c(35, 50))
ggplot()+
geom_polygon(data = data, aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-125, -120), ylim = c(35, 50))
ggplot()+
geom_polygon(data = data, aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-126, -122), ylim = c(38, 47))
ggsave("x.png", plot = x,
height = 5, width =3, untis = "in")
ggsave("x.png", plot = x,
height = 5, width =3, units = "in")
ggplot()+
geom_polygon(data = data, aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-126, -122), ylim = c(38, 47)) ->x
ggsave("x.png", plot = x,
height = 5, width =3, units = "in")
library(raster)
library(dplyr)
bind_rows(raster::getData("GADM", country = c("USA"), level = 1, path = "./data/raster"),
raster::getData("GADM", country = c("CAN"), level = 1, path = "./data/raster"))
bind_rows(fortify(raster::getData("GADM", country = c("USA"), level = 1, path = "./data/raster")),
fortify(raster::getData("GADM", country = c("CAN"), level = 1, path = "./data/raster")))
raster::getData("GADM", country = c("USA", "CAN"), level = 1, path = "./data/raster")
raster::getData("GADM", country = c("USA", "CAN"), level = 1, path = "./data/raster") -> test
coord_quickmap(xlim = c(-85, -80), ylim = c(44, 45))
ggplot()+
geom_polygon(data = test, aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-85, -80), ylim = c(44, 45))
ggplot()+
geom_polygon(data = test, aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-130, -120), ylim = c(44, 60))
tes
test
test@data$NAME_0
class(test)
usa <- raster::getData("GADM", country = c("USA"), level = 1, path = "./data/maps")
can <- raster::getData("GADM", country = c("CAN"), level = 1, path = "./data/maps")
raster::getData("GADM", country = c("CAN"), level = 1, path = "./data/raster")
rbind(raster::getData("GADM", country = c("USA"), level = 1, path = "./data/raster"),
raster::getData("GADM", country = c("CAN"), level = 1, path = "./data/raster"))
rbind(raster::getData("GADM", country = c("USA"), level = 1, path = "./data/raster"),
raster::getData("GADM", country = c("CAN"), level = 1, path = "./data/raster")) -> test
ggplot()+
geom_polygon(data = fortify(test), aes(x = long, y = lat, group = group))+
coord_quickmap(xlim = c(-130, -120), ylim = c(44, 60))
